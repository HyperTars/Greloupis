swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Online Video Platform"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "hypertars@gmail.com"
  license:
    name: "GNU v3.0"
    url: "https://www.gnu.org/licenses/"
host: "online-video-platform.com"
basePath: "/api"

tags:
- name: "user"
  description: "Operations about user"
  externalDocs:
    description: "See more design details"
    url: "https://github.com/HyperTars/Online-Video-Platform"
- name: "video"
  description: "Operations about video"
  externalDocs:
    description: "See more design details"
    url: "https://github.com/HyperTars/Online-Video-Platform"
- name: "search"
  description: "Operations about search"
  externalDocs:
    description: "See more design details"
    url: "https://github.com/HyperTars/Online-Video-Platform"

schemes:
- "https"
- "http"


securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://online-video-platform.com/login"
    flow: "implicit"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"

definitions:

  AddressDetail:
    type: "object"
    properties:
      street1:
        type: "string"
      street2:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      country:
        type: "string"
      zip:
        type: "string"
    xml:
      name: "AddresDetail"
  
  UserDetail:
    type: "object"
    required: 
    - "first_name"
    - "last_name"
    - "phone"
    properties:
      first_name:
        type: "string"
      last_name:
        type: "string"
      phone:
        type: "string"
      address:
        $ref: "#/definitions/AddressDetail"
    xml:
      name: "UserDetail"

  LoginDetail:
    type: "object"
    properties:
      login_ip:
        type: "string"
      login_time:
        type: "string"
        format: "date-time"
    xml:
      name: "LoginDetail"
  
  VideoURI:
    type: "object"
    properties:
      video_low:
        type: "string"
      video_mid:
        type: "string"
      video_high:
        type: "string"
    xml:
      name: "VideoURI"
  
  Thumbnail:
    type: "object"
    required:
    - "thumbnail_type"
    properties:
      thumbnail_uri:
        type: "string"
      thumbnail_type:
        type: "string"
        enum:
        - "system default"
        - "user upload"
        - "auto first frame"
    xml:
      name: "Thumbnail"
  
  User:
    type: "object"
    required:
    - "user_email"
    - "user_name"
    properties:
      user_id:
        type: "string"
      user_name:
        type: "string"
      user_password:
        type: "string"
      user_detail:
        $ref: "#/definitions/UserDetail"
      user_status:
        type: "string"
        enum:
        - "public"
        - "private"
        - "closed"
      user_thumbnail:
        $ref: "#/definitions/Thumbnail"
      user_follower:
        type: "integer"
        format: "int64"
      user_reg_date:
        type: "string"
        format: "date-time"
      user_recent_login:
        type: "array"
        xml:
          name: "login_detail"
          wrapped: true
        items:
          $ref: "#/definitions/LoginDetail"
    xml:
      name: "User"

  Follow:
    type: "object"
    properties:
      follow_uploader:
        type: "string"
      follow_by:
        type: "string"
      follow_date:
        type: "string"
        format: "date-time"
    xml:
      name: "Follow"
  
  History:
    type: "object"
    properties:
      history_id:
        type: "string"
      user_id:
        type: "string"
      video_id:
        type: "string"
      process:
        type: "string"
        format: "date-time"
    xml:
      name: "History"
  
  Video:
    type: "object"
    required:
    - "video_title"
    properties:
      video_id:
        type: "string"
      user_id:
        type: "string"
      video_title:
        type: "string"
      video_tag:
        type: "array"
        xml:
          name: "tg"
          wrapped: true
        items:
          type: "string"
      video_category:
        type: "array"
        xml:
          name: "cat"
          wrapped: true
        items:
          type: "string"
      video_description:
        type: "string"
      video_language:
        type: "string"
        example: "English"
      video_status:
        type: "string"
        enum:
        - "public"
        - "private"
        - "limited"
        - "deleted"
      video_content:
        type: "string"
      video_content_status:
        type: "string"
        enum:
        - "pending"
        - "processing"
        - "finished"
        - "failed"
        - "rejected"
      video_size:
        type: "string"
      video_view:
        type: "integer"
        format: "int64"
      video_like:
        type: "integer"
        format: "int64"
      video_dislike:
        type: "integer"
        format: "int64"
      video_comment:
        type: "integer"
        format: "int64"
      video_star:
        type: "integer"
        format: "int64"
      video_share:
        type: "integer"
        format: "int64"
      video_thumbnail:
        $ref: "#/definitions/Thumbnail"
      video_upload_date:
        type: "string"
        format: "date-time"
      video_uri:
        $ref: "#/definitions/VideoURI"
    xml:
      name: "Video"
  
  Comment:
    type: "object"
    required:
    - "comment"
    properties:
      comment_id:
        type: "string"
      user_id:
        type: "string"
      video_id:
        type: "string"
      comment:
        type: "string"
      comment_date:
        type: "string"
        format: "date-time"
    xml:
      name: "Comment"
  
  Like:
    type: "object"
    properties:
      like_id:
        type: "string"
      user_id:
        type: "string"
      video_id:
        type: "string"
      like_date:
        type: "string"
        format: "date-time"
    xml:
      name: "Like"
  
  Dislike:
    type: "object"
    properties:
      dislike_id:
        type: "string"
      user_id:
        type: "string"
      video_id:
        type: "string"
      dislike_date:
        type: "string"
        format: "date-time"
    xml:
      name: "Dislike"
  
  Star:
    type: "object"
    properties:
      star_id:
        type: "string"
      user_id:
        type: "string"
      video_id:
        type: "string"
      star_date:
        type: "string"
        format: "date-time"
    xml:
      name: "Star"

  Order:
    type: "object"
    properties:
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"

externalDocs:
  description: "Git Repo"
  url: "https://github.com/HyperTars/Online-Video-Platform"